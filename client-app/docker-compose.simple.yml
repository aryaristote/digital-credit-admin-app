version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: digital-credit-postgres
    environment:
      POSTGRES_DB: digital_credit_client
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - digital-credit-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d digital_credit_client"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for caching and background jobs)
  redis:
    image: redis:7-alpine
    container_name: digital-credit-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - digital-credit-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.minimal
    container_name: digital-credit-backend
    environment:
      NODE_ENV: production
      PORT: 3005
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: digital_credit_client
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 1h
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-this-in-production
      JWT_REFRESH_EXPIRES_IN: 7d
      API_PREFIX: api/v1
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3005:3005"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - digital-credit-network
    restart: unless-stopped

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.minimal
    container_name: digital-credit-frontend
    environment:
      VITE_API_URL: http://localhost:3005/api/v1
      VITE_GRAPHQL_URL: http://localhost:3005/graphql
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - digital-credit-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  digital-credit-network:
    driver: bridge

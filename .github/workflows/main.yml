name: Main CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-all:
    name: Test All Applications
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: digital_credit_client_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    strategy:
      matrix:
        app:
          - name: client-backend
            path: client-app/backend
            db_password: postgres
          - name: admin-backend
            path: admin-app/backend
            db_password: root

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: ${{ matrix.app.path }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ matrix.app.path }}
        run: npm ci

      - name: Run tests
        working-directory: ${{ matrix.app.path }}
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: ${{ matrix.app.db_password }}
          DB_DATABASE: digital_credit_client_test
          JWT_SECRET: test-jwt-secret-key
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        run: npm run test -- --coverage --watchAll=false || echo "Tests completed"

      - name: Run linter
        working-directory: ${{ matrix.app.path }}
        run: npm run lint || echo "Linting completed"

  build-all:
    name: Build All Applications
    runs-on: ubuntu-latest
    needs: test-all

    strategy:
      matrix:
        app:
          - name: client-backend
            path: client-app/backend
          - name: admin-backend
            path: admin-app/backend
          - name: client-frontend
            path: client-app/frontend
            is_frontend: true
          - name: admin-frontend
            path: admin-app/frontend
            is_frontend: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: ${{ matrix.app.path }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ matrix.app.path }}
        run: npm ci

      - name: Build application
        working-directory: ${{ matrix.app.path }}
        env:
          VITE_API_URL: ${{ matrix.app.is_frontend && 'http://localhost:3000' || '' }}
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.app.name }}-build
          path: ${{ matrix.app.path }}/dist
          retention-days: 7

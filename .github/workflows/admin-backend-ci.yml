name: Admin Backend CI

on:
  push:
    branches: [main, develop]
    paths:
      - "admin-app/backend/**"
      - ".github/workflows/admin-backend-ci.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "admin-app/backend/**"
      - ".github/workflows/admin-backend-ci.yml"

jobs:
  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: digital_credit_client_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    defaults:
      run:
        working-directory: admin-app/backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: admin-app/backend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Check code formatting
        run: npx prettier --check "src/**/*.ts"

      - name: Run tests
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: root
          DB_DATABASE: digital_credit_client_test
          JWT_SECRET: test-jwt-secret-key
        run: npm run test:cov

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: ./coverage/coverage-final.json
          directory: admin-app/backend/coverage
          flags: admin-backend
          name: admin-backend-coverage

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint-and-test

    defaults:
      run:
        working-directory: admin-app/backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: admin-app/backend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: admin-backend-build
          path: admin-app/backend/dist
          retention-days: 7

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: admin-app/backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Run security audit
        run: npm audit --audit-level=moderate || true
